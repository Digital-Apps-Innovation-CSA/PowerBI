on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  Build_Datasets:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up directories and download Tabular Editor
      run: |
        $path = "./SalesReturns"
        $tempPath = "$path\_temp"
        $toolPath = "$path\_tools\TE"
        New-Item -ItemType Directory -Path $tempPath -ErrorAction SilentlyContinue | Out-Null
        New-Item -ItemType Directory -Path $toolPath -ErrorAction SilentlyContinue | Out-Null
        
        Write-Host "Downloading Tabular Editor binaries"
        $downloadUrl = "https://github.com/TabularEditor/TabularEditor/releases/latest/download/TabularEditor.Portable.zip"
        $zipFile = "$tempPath\TabularEditor.zip"
        Invoke-WebRequest -Uri $downloadUrl -OutFile $zipFile
        Expand-Archive -Path $zipFile -DestinationPath $toolPath -Force

        Write-Host "Downloading Dataset default rules"
        $rulesUrl = "https://raw.githubusercontent.com/microsoft/Analysis-Services/master/BestPracticeRules/BPARules.json"
        Invoke-WebRequest -Uri $rulesUrl -OutFile "$tempPath\Rules-Dataset.json"
      shell: pwsh

    - name: Run Dataset Rules
      id: tf-plan-string
      run: |
              $path = "./SalesReturns"
              $tempPath = "$path\_temp"
              $toolPath = "$path\_Tools\TE\TabularEditor.exe"
              $rulesPath = "$path\Rules-Dataset.json"
              if (!(Test-Path $rulesPath))
              {
                  Write-Host "Running downloaded rules"
                  $rulesPath = "$tempPath\Rules-Dataset.json"
              }
              $itemsFolders = Get-ChildItem  -Path $path -recurse -include ("*.pbidataset", "*.pbism")
              foreach($itemFolder in $itemsFolders)
              {	
                  $itemPath = "$($itemFolder.Directory.FullName)\definition"
                  if (!(Test-Path $itemPath))
                  {
                      $itemPath = "$($itemFolder.Directory.FullName)\model.bim"

                      if (!(Test-Path $itemPath))
                      {
                          throw "Cannot find semantic model definition."
                      }
                  }
                  Write-Host "##[group]Running rules for: '$itemPath'"
                  $TERRAFORM_PLAN = $(Start-Process -FilePath "$toolPath" -ArgumentList """$itemPath"" -A ""$rulesPath"" -V" -NoNewWindow -Wait)
                  Write-Host "##[endgroup]"
                  $delimiter = "--------"
                  echo "summary<<${delimiter}" >> $GITHUB_OUTPUT
                  echo "## Terraform Plan Output" >> $GITHUB_OUTPUT
                  echo "<details><summary>Click to expand</summary>" >> $GITHUB_OUTPUT
                  echo "" >> $GITHUB_OUTPUT
                  echo '```terraform' >> $GITHUB_OUTPUT
                  echo "$TERRAFORM_PLAN" >> $GITHUB_OUTPUT
                  echo '```' >> $GITHUB_OUTPUT
                  echo "</details>" >> $GITHUB_OUTPUT
                  echo "${delimiter}" >> $GITHUB_OUTPUT

              }
      shell: pwsh   
    - name: Publish Terraform Plan to Task Summary
      env:
        SUMMARY: ${{ steps.tf-plan-string.outputs.summary }}
      run: |
        echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY 
  
  Build_Reports:
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Download PBIXInspector
      run: |
              $path = "./SalesReturns"
              $tempPath = "$path\_temp"
              $toolPath = "$path\_Tools\PBIInspector"
              New-Item -ItemType Directory -Path $tempPath -ErrorAction SilentlyContinue | Out-Null

              Write-Host "##[debug]Downloading PBI Inspector"
              $downloadUrl = "https://github.com/NatVanG/PBI-Inspector/releases/latest/download/win-x64-CLI.zip" 
              $zipFile = "$tempPath\PBIXInspector.zip"
              Invoke-WebRequest -Uri $downloadUrl -OutFile $zipFile
              Expand-Archive -Path $zipFile -DestinationPath $toolPath -Force                            

              Write-Host "##[debug]Downloading Report default rules"
              $downloadUrl = "https://raw.githubusercontent.com/NatVanG/PBI-Inspector/main/Rules/Base-rules.json"
              Invoke-WebRequest -Uri $downloadUrl -OutFile "$tempPath\Rules-Report.json"     
      shell: pwsh

    - name: Run Report Rules
      run: |
              $path = "./SalesReturns"
              $tempPath = "$path\_temp"
              $toolPath =  "$path\_Tools\PBIInspector\win-x64\CLI\PBIXInspectorCLI.exe"
              $rulesPath = "$path\Rules-Report.json"
              if (!(Test-Path $rulesPath))
              {
                 Write-Host "Running default downloaded rules"
                 $rulesPath = "$tempPath\Rules-Report.json"
              }
              $itemsFolders = Get-ChildItem  -Path $path -recurse -include *.pbir
              foreach($itemFolder in $itemsFolders)
              {	
                $itemPath = $itemFolder.Directory.FullName
                Write-Host "##[group]Running rules for: '$itemPath'"
                Start-Process -FilePath "$toolPath" -ArgumentList "-pbipreport ""$itemPath"" -rules ""$rulesPath"" -formats ""ADO""" -NoNewWindow -Wait
                Write-Host "##[endgroup]"
              }     
      shell: pwsh